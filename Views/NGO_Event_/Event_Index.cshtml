@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EventWithDonationCountVM>

@{
    // Add "Created By" field for admins only
    string[] fields = ViewBag.UserRole == "Admin"
        ? new[] { "Photo", "Event Name", "Start Date", "End Date", "Start Time", "End Time", "Location", "Description", "Status", "Created By" }
        : new[] { "Photo", "Event Name", "Start Date", "End Date", "Start Time", "End Time", "Location", "Description", "Status" };
}

@section head {
    <style>
        .event-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
        }
    </style>
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-md-6">
            <h2>Events Management</h2>
            @if (ViewBag.ShowingMyEvents == true)
            {
                <div class="alert alert-info">
                    <strong>Member View:</strong> Showing only events you created (@Model.TotalItemCount record(s))
                </div>
            }
            else if (ViewBag.UserRole == "Admin")
            {
                <div class="alert alert-success">
                    <strong>Admin View:</strong> Showing all events (@Model.TotalItemCount record(s))
                </div>
            }
        </div>
        <div class="col-md-6 text-end d-flex justify-content-end align-items-end">
            <a href="@Url.Action("Event_Insert")" class="btn btn-primary btn-lg">
                Add New Event
            </a>
        </div>
    </div>

    <!-- Search -->
    <div class="row mb-4">
        <div class="col-md-6">
            <form class="d-flex gap-2">
                @Html.TextBox("name", "", new {
                type = "search",
                                autofocus = "",
                                data_trim = "",
                                placeholder = "Search events...",
                                @class = "form-control"
                                })
                @Html.Hidden("sort")
                @Html.Hidden("dir")
                <button class="btn btn-outline-secondary" type="submit">
                    Search
                </button>
                @if (!string.IsNullOrEmpty(ViewBag.Name))
                {
                    <a href="@Url.Action("Event_Index")" class="btn btn-outline-danger">
                        Clear
                    </a>
                }
            </form>
        </div>
    </div>

    <!-- Events Table -->
    @if (Model.Any())
    {
        <div class="card">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0">
                    <thead class="table-dark">
                        <tr>
                            @foreach (var f in fields)
                            {
                                string d = "asc";
                                string c = "";

                                if (f == ViewBag.Sort)
                                {
                                    d = ViewBag.Dir == "des" ? "asc" : "des";
                                    c = ViewBag.Dir == "des" ? "text-decoration-underline" : "text-decoration-underline";
                                }

                                <th>
                                    <a href="?name=@ViewBag.Name&sort=@f&dir=@d" class="text-white text-decoration-none @c">
                                        @f
                                        @if (f == ViewBag.Sort)
                                        {
                                            <span>@(ViewBag.Dir == "des" ? " ↓" : " ↑")</span>
                                        }
                                    </a>
                                </th>
                            }
							<th>Donations</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var e in Model)
                        {
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(e.Event.EventPhotoURL))
                                    {
                                        <img src="/events/@e.Event.EventPhotoURL" class="event-image rounded" alt="@e.Event.EventTitle">
                                    }
                                    else
                                    {
                                        <div class="event-image bg-light rounded d-flex align-items-center justify-content-center text-muted">
                                            No Image
                                        </div>
                                    }
                                </td>
                                <td class="fw-bold">@e.Event.EventTitle</td>

                                <td>@e.Event.EventStartDate.ToString("dd/MM/yyyy")</td>
                                <td>@e.Event.EventEndDate.ToString("dd/MM/yyyy")</td>
                                <td>@e.Event.EventStartTime.ToString(@"hh\:mm")</td>
                                <td>@e.Event.EventEndTime.ToString(@"hh\:mm")</td>
                                <td>@e.Event.EventLocation</td>
                                <td>
                                    @if (e.Event.EventDescription?.Length > 50)
                                    {
                                        <span title="@e.Event.EventDescription">@e.Event.EventDescription.Substring(0, 50)...</span>
                                    }
                                    else
                                    {
                                        @e.Event.EventDescription
                                    }
                                </td>
                                <td>
                                    @{
                                        string statusClass = e.Event.EventStatus?.ToLower() switch
                                        {
                                            "upcoming" => "badge bg-success",
                                            "ongoing" => "badge bg-warning text-dark",
                                            "concluded" => "badge bg-secondary",
                                            _ => "badge bg-secondary"
                                        };
                                    }
                                    <span class="@statusClass">@e.Event.EventStatus</span>
                                </td>

                                @if (ViewBag.UserRole == "Admin")
                                {
                                    <td class="text-muted">
                                        @(e.Event.CreatedBy ?? "N/A")
                                    </td>
                                }

                                <td>
                                    <span class="badge bg-success donation-count-badge">@e.DonationCount</span>
                                </td>

                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button class="btn btn-info" data-get="@Url.Action("Event_Details", "NGO_Event_", new { id = e.Event.EventID })">
                                            Details
                                        </button>
                                        <button class="btn btn-primary" data-get="@Url.Action("Event_Update", new { id = e.Event.EventID })">
                                            Edit
                                        </button>
                                        <button class="btn btn-danger" data-post="@Url.Action("Delete", new { id = e.Event.EventID })"
                                                onclick="return confirm('Are you sure you want to delete this event?')">
                                            Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        @if (Model.PageCount > 1)
        {
            <div class="d-flex justify-content-center mt-4">
                @{
                    var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
                    options.LinkToFirstPageFormat = "First";
                    options.LinkToLastPageFormat = "Last";
                    options.LinkToPreviousPageFormat = "Previous";
                    options.LinkToNextPageFormat = "Next";
                    options.UlElementClasses = new[] { "pagination" };
                    options.LiElementClasses = new[] { "page-item" };
                    options.PageClasses = new[] { "page-link" };
                }
                @Html.PagedListPager(Model, page => Url.Action("Event_Index", new { name = ViewBag.Name, sort = ViewBag.Sort, dir = ViewBag.Dir, page }), options)
            </div>
        }
    }
    else
    {
        <!-- Empty State -->
        <div class="alert alert-info text-center">
            <h4>No Events Found</h4>
            @if (ViewBag.ShowingMyEvents == true)
            {
                <p>You haven't created any events yet. <a href="@Url.Action("Event_Insert")" class="alert-link">Create your first event</a>!</p>
            }
            else if (!string.IsNullOrEmpty(ViewBag.Name))
            {
                <p>No events match your search criteria. <a href="@Url.Action("Event_Index")" class="alert-link">Show all events</a></p>
            }
            else
            {
                <p>There are currently no events in the system. <a href="@Url.Action("Event_Insert")" class="alert-link">Create the first event</a>!</p>
            }
        </div>
    }
</div>