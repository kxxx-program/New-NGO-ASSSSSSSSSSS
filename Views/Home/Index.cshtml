@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Event>

@{
    ViewBag.Title = "Home | Index";
    string[] fields = ["Photo", "EventTitle", "EventStartDate", "EventEndDate", "EventStartTime", "EventEndTime", "EventStatus", "EventLocation"];
}

<form>
    @Html.TextBox("name", "",
    new { type = "search", autofocus = "", data_trim = "" })
    @Html.Hidden("sort")
    @Html.Hidden("dir")
    <button>Search</button>
</form>

<div class="mb-3">
    <small class="text-muted">Sort by:</small>
    @foreach (var f in fields)
    {
        string d = "asc";
        string c = "";
        string activeClass = "";

        if (f == ViewBag.Sort)
        {
            d = ViewBag.Dir == "des" ? "asc" : "des";
            c = ViewBag.Dir;
            activeClass = "btn-primary";
        }
        else
        {
            activeClass = "btn-outline-secondary";
        }

        <a href="?name=@ViewBag.Name&sort=@f&dir=@d" class="btn btn-sm @activeClass me-1 mb-1">
            @f
            @if (f == ViewBag.Sort)
            {
                @if (ViewBag.Dir == "des")
                {
                    <i class="fas fa-sort-down"></i>
                }
                else
                {
                    <i class="fas fa-sort-up"></i>
                }
            }
        </a>
    }
</div>

<!-- Events Cards -->
<div class="row">
    @foreach (var e in Model)
    {
        <div class="col-lg-6 col-xl-4 mb-4">
            <div class="card event-card h-100">
                <div class="row g-0 h-100">
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(e.EventPhotoURL))
                        {
                            <img src="/events/@e.EventPhotoURL" class="img-fluid rounded-start event-image" alt="@e.EventTitle">
                        }
                        else
                        {
                            <div class="event-image-placeholder rounded-start">
                                <div class="text-center">
                                    <i class="fas fa-image fa-2x mb-2"></i><br>
                                    <small>No Image</small>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-md-7">
                        <div class="card-body d-flex flex-column h-100">
                            <!-- Title and Status -->
                            <div>
                                <h5 class="card-title">@e.EventTitle</h5>

                                <!-- Status Badge -->
                                @{
                                    string statusClass = e.EventStatus?.ToLower() switch
                                    {
                                        "upcoming" => "status-badge status-upcoming",
                                        "ongoing" => "status-badge status-ongoing",
                                        "concluded" => "status-badge status-concluded",
                                        _ => "status-badge"
                                    };
                                }
                                <span class="@statusClass mb-2 d-inline-block">@e.EventStatus</span>
                            </div>

                            <!-- Event Details -->
                            <div class="flex-grow-1">
                                <div class="mb-2">
                                    <i class="fas fa-calendar-alt text-primary me-1"></i>
                                    <small class="event-time">
                                        @e.EventStartDate.ToString("dd/MM/yyyy") - @e.EventEndDate.ToString("dd/MM/yyyy")
                                    </small>
                                </div>

                                <div class="mb-2">
                                    <i class="fas fa-clock text-primary me-1"></i>
                                    <small class="event-time">@e.EventStartTime.ToString(@"hh\:mm") - @e.EventEndTime.ToString(@"hh\:mm")</small>
                                </div>

                                <div class="mb-2">
                                    <i class="fas fa-map-marker-alt text-primary me-1"></i>
                                    <small class="event-location">@e.EventLocation</small>
                                </div>

                                <p class="card-text card-description">
                                    @if (e.EventDescription?.Length > 100)
                                    {
                                        @(e.EventDescription.Substring(0, 100) + "...")
                                    }
                                    else
                                    {
                                        @e.EventDescription
                                    }
                                </p>

                                @* Show Created By for Admins *@
                                @if (ViewBag.UserRole == "Admin" && !string.IsNullOrEmpty(e.CreatedBy))
                                {
                                    <p class="card-text">
                                        <small class="text-muted">
                                            <i class="fas fa-user me-1"></i>Created by: @e.CreatedBy
                                        </small>
                                    </p>
                                }
                            </div>

                            <!-- Action Buttons -->
                            <div class="mt-auto">
                                <div class="btn-group w-100" role="group">
                                    <button class="btn btn-outline-primary btn-sm" data-get="@Url.Action("Event_Details", "NGO_Event_", new { id = e.EventID })" title="View Details">
                                        <i class="fas fa-eye"></i> Details
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@* Pagination *@
@if (Model.PageCount > 1)
{
    <div class="d-flex justify-content-center mt-4">
        @{
            var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
            options.LinkToFirstPageFormat = "First";
            options.LinkToLastPageFormat = "Last";
            options.LinkToPreviousPageFormat = "Previous";
            options.LinkToNextPageFormat = "Next";
            options.UlElementClasses = new[] { "pagination" };
            options.LiElementClasses = new[] { "page-item" };
            options.PageClasses = new[] { "page-link" };
        }
        @Html.PagedListPager(Model, page => Url.Action("Event_Index", new { name = ViewBag.Name, sort = ViewBag.Sort, dir = ViewBag.Dir, page }), options)
    </div>
}

@if (!Model.Any())
{
    <div class="alert alert-info text-center">
        <h4><i class="fas fa-info-circle"></i> No Events Found</h4>
        @if (ViewBag.ShowingMyEvents == true)
        {
            <p>You haven't created any events yet. <a href="@Url.Action("Event_Insert")" class="alert-link">Create your first event</a>!</p>
        }
        else if (!string.IsNullOrEmpty(ViewBag.Name))
        {
            <p>No events match your search criteria. <a href="@Url.Action("Event_Index")" class="alert-link">Show all events</a></p>
        }
        else
        {
            <p>There are currently no events in the system. <a href="@Url.Action("Event_Insert")" class="alert-link">Create the first event</a>!</p>
        }
    </div>
}

