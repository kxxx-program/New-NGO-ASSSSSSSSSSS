@model NGO_Web_Demo.Models.VolunteerVM


@{
    ViewBag.Title = "Join as Volunteer";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<style>
    .volunteer-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
    }

    .main-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 30px;
        margin-top: 20px;
    }

    .form-section {
        background: white;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        height: fit-content;
    }

    .map-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        position: sticky;
        top: 20px;
    }

    .map-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        text-align: center;
    }

    .map-container {
        height: 500px;
        width: 100%;
    }

    .event-info-banner {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 30px;
        text-align: center;
    }

    .event-title {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .form-title {
        color: #2c3e50;
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 25px;
        border-bottom: 3px solid #667eea;
        padding-bottom: 10px;
    }

    .form-control {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 12px;
        transition: border-color 0.3s ease;
    }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        padding: 12px 30px;
        font-weight: bold;
        border-radius: 8px;
        transition: transform 0.3s ease;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(102, 126, 234, 0.3);
        }

    .btn-secondary {
        background: #6c757d;
        border: none;
        padding: 12px 30px;
        font-weight: bold;
        border-radius: 8px;
    }

    .error-banner {
        background: #ffe6e6;
        border: 2px solid #dc3545;
        color: #dc3545;
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 20px;
        text-align: center;
    }

    .location-info {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        border-left: 4px solid #667eea;
        margin-bottom: 15px;
    }

    .loading-spinner {
        display: none;
        text-align: center;
        padding: 20px;
        color: #667eea;
    }

    @@media (max-width: 768px) {
        .main-content {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .map-section {
            position: static;
            order: -1;
        }

        .map-container {
            height: 300px;
        }
    }
</style>

@*Security shit*@
@if (TempData["Error"] != null)
{
    <div style="color: red; padding: 15px; background: #ffe6e6; border: 1px solid red; border-radius: 5px; margin-bottom: 20px;">
        <strong>Error:</strong> @TempData["Error"]
        <br />
        <a asp-controller="NGO_Event_" asp-action="Event_Details" asp-route-id="@Model.EventID">Return to Event Details</a>
    </div>
}
else if (ViewBag.IsEventConcluded == true)
{
    @* Server-side check for concluded events *@
    <div style="color: red; padding: 20px; text-align: center; background: #ffe6e6; border: 2px solid red; border-radius: 8px;">
        <h2>Event <strong>@ViewBag.EventTitle</strong> has concluded!</h2>
        <p>Registration is no longer available for this event.</p>
        <a asp-controller="NGO_Event_" asp-action="Event_Details" asp-route-id="@Model.EventID"
           style="background: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
            Return to Event Details
        </a>
    </div>
}

else
{
    @if (ViewBag.EventTitle != null)
    {
        <h4>Sign up as Volunteer for <strong>@ViewBag.EventTitle</strong>!</h4>
    }



    <h1>Volunteer Recruitment</h1>

    <p>This is some bullshit</p>


    <form asp-action="AddVolunteer" asp-controller="Recruitment" method="post" class="needs-validation" novalidate>
        <input type="hidden" name="eventId" value="@ViewBag.EventID" />

        <div class="mb-3">
            <label asp-for="VolunteerID" class="form-label">ID</label>
            <input asp-for="VolunteerID" class="form-control" readonly />
            <span asp-validation-for="VolunteerID" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Name" class="form-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Email" class="form-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="PhoneNumber" class="form-label"></label>
            <input asp-for="PhoneNumber" class="form-control" />
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Age" class="form-label"></label>
            <input asp-for="Age" type="number" class="form-control" />
            <span asp-validation-for="Age" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="ShiftStart" class="form-label"></label>
            <input asp-for="ShiftStart"
                   type="datetime-local"
                   class="form-control"
                   min="@ViewBag.EventStart"
                   max="@ViewBag.EventEnd" />
            <span asp-validation-for="ShiftStart" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="WorkHours" class="form-label"></label>
            <input asp-for="WorkHours" type="number" class="form-control" />
            <span asp-validation-for="WorkHours" class="text-danger"></span>
        </div>

        <div class="d-flex gap-2">
            <button type="submit" class="btn btn-primary">Submit Volunteer form</button>
            <button type="reset" class="btn btn-secondary">Reset</button>
        </div>
        <div class="mt-4">
            <a asp-controller="NGO_Event_" asp-action="Event_Details" asp-route-id="@ViewBag.EventID" class="text-muted">
                ← Back to Event Details
            </a>
        </div>
    </form>


    @*=======================================Map time===========================================*@
    <div class="map-section">

        <div class="location-info">
            <i class="fas fa-map-marker-alt me-2"></i>
            <span id="eventLocation">@ViewBag.EventLocation</span>
        </div>


        <div class="loading-spinner" id="mapLoading">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading map...</span>
            </div>
            <div class="mt-2">Loading event location...</div>
        </div>
        <div>
            <div id="map" class="map-container"></div>
        </div>

    </div>

    @section Scripts {
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

        <script>
            // Configuration
            const GEOAPIFY_API_KEY = '0bf7f47fb1bb4944a3921e68a5bf6d2d';
            const DEFAULT_LOCATION = [3.1390, 101.6869]; // Kuala Lumpur

            let map;
            let marker;

            function initializeMap() {

                map = L.map('map').setView(DEFAULT_LOCATION, 13);

                // OpenFreeMap tile layer
                L.tileLayer('https://tiles.openfreemap.org/styles/liberty/{z}/{x}/{y}.png', {
                    maxZoom: 18,
                    attribution: '© OpenStreetMap contributors, tiles by OpenFreeMap'
                }).addTo(map);

                // Get event location and geocode it
                geocodeEventLocation();
            }

            // Geocode event location using Geoapify
            async function geocodeEventLocation() {
                const eventLocationElement = document.getElementById('eventLocation');
                const eventLocation = eventLocationElement ? eventLocationElement.textContent.trim() : '';

                if (!eventLocation) {
                    console.warn('No event location provided, using default coordinates');
                    addLocationMarker(DEFAULT_LOCATION, 'Event Location');
                    return;
                }

                // Show loading spinner
                document.getElementById('mapLoading').style.display = 'block';


                try {

                    const biasLocation = 'countrycode:my';
                    const query = `${eventLocation}, Malaysia`;

                    const response = await fetch(
                        `https://api.geoapify.com/v1/geocode/search?text=${encodeURIComponent(query)}&${biasLocation}&apiKey=${GEOAPIFY_API_KEY}&limit=1`
                    );

                    const data = await response.json();

                    if (data.features && data.features.length > 0) {
                        const coordinates = data.features[0].geometry.coordinates;
                        const [lng, lat] = coordinates;

                        // Update map view and add marker
                        map.setView([lat, lng], 15);
                        addLocationMarker([lat, lng], eventLocation);
                    } else {
                        // Fallback to default location
                        console.warn('Location not found, using default coordinates');
                        addLocationMarker(DEFAULT_LOCATION, eventLocation);
                    }
                } catch (error) {
                    console.error('Geocoding error:', error);
                    addLocationMarker(DEFAULT_LOCATION, eventLocation);
                } finally {
                    document.getElementById('mapLoading').style.display = 'none';
                }
            }

            // Add marker to map
            function addLocationMarker(coordinates, locationName) {
                if (marker) {
                    map.removeLayer(marker);
                }

                marker = L.marker(coordinates)
                    .addTo(map)
                    .bindPopup(`
                        <div style="text-align: center; padding: 10px;">
                            <h6 style="margin-bottom: 10px; color: #667eea;"><i class="fas fa-calendar-alt"></i> Event Location</h6>
                            <p style="margin: 0; font-weight: bold;">${locationName}</p>
                            <small style="color: #6c757d;">Coordinates: ${coordinates[0].toFixed(4)}, ${coordinates[1].toFixed(4)}</small>
                            <div style="margin-top: 8px;">
                                <a href="https://www.google.com/maps?q=${coordinates[0]},${coordinates[1]}"
                                   target="_blank"
                                   style="color: #667eea; text-decoration: none; font-size: 12px;">
                                    <i class="fas fa-external-link-alt"></i> Open in Google Maps
                                </a>
                            </div>
                        </div>
                    `)
                    .openPopup();
            }

            // Initialize everything when page loads
            document.addEventListener('DOMContentLoaded', function() {
                initializeMap();
            });

            // Handle map resize on window resize
            window.addEventListener('resize', function() {
                if (map) {
                    setTimeout(() => {
                        map.invalidateSize();
                    }, 100);
                }
            });
        </script>

        <script>
            // Client-side validation
            $.validator.setDefaults({ ignore: '' });
        </script>
    }
}


@section foot {
    <script>
        // Enable hidden file validation
        $.validator.setDefaults({ ignore: '' });
    </script>
}


    }





